apiVersion: v1
data:
  delete-failed-cert-requests.sh: |
    #!/bin/bash

    set -euo pipefail

    # kubectl get certificaterequests -A -o json | \
    #   jq -r '.items[] | select(.status.conditions[] | select(.type=="Ready" and .status=="False")) | "\(.metadata.name) \t \(.metadata.namespace)"' | \
    #   awk '{ print "kubectl delete certificaterequests", $1, "-n", $2 }' | \
    #   bash

    export APISERVER=https://kubernetes.default.svc
    export SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount
    export TOKEN=$(cat ${SERVICEACCOUNT}/token)
    export CACERT=${SERVICEACCOUNT}/ca.crt

    function request_apiserver() {
      curl -v --cacert ${CACERT} --header "Authorization: Bearer ${TOKEN}" -X ${1} "${APISERVER}${2}"
    }
    export -f request_apiserver

    function delete_failed_certificate_requests() {
      request_apiserver GET /apis/cert-manager.io/v1/certificaterequests | \
        jq -r '.items[] | select(.status.conditions[] | select(.type=="Ready" and .status=="False")) | "\(.metadata.namespace) \t \(.metadata.name)"' | \
        awk '{ printf "request_apiserver DELETE /apis/cert-manager.io/v1/namespaces/%s/certificaterequests/%s\n", $1, $2 }' | \
        bash
    }

    while true; do
      delete_failed_certificate_requests;
      sleep 10s;
    done;
kind: ConfigMap
metadata:
  name: cert-renewal-agent-scripts
  namespace: cert-manager
